embedding_model: gemini:text-embedding-004
chunk_size: 1500
chunk_overlap: 75
reranker_model: null
top_k: 5
batch_size: 100
next_file_id: 2
document_paths:
- /Users/mike/personal_projects/dotfiles/aichat/functions/agents/demo/README.md
- https://github.com/sigoden/llm-functions/blob/main/README.md
files:
  0:
    hash: 40d3eeb1b4e7ef720235107c8395ce75e2a350ac8396782bc13553c9a2c64a28
    path: https://github.com/sigoden/llm-functions/blob/main/README.md
    documents:
    - page_content: "Skip to content                                                                         \n\n## Navigation Menu\n\n      Toggle navigation                                                                                                                Sign in                                                                                                               Search or jump to...                                                      \n\n# Search code, repositories, users, issues, pull requests...\n\n                                                           Search                                                                                                                                 Clear                                                    \n\n                                                                                  Search syntax tips                                                              \n\n#         Provide feedback       \n\n                                                                   \n\nWe read every piece of feedback, and take your input very seriously.                              Include my email address so I can be contacted                          Cancel              Submit feedback                          \n\n#         Saved searches"
      metadata: {}
    - page_content: "## Use saved searches to filter your results more quickly\n\n                                                                                                          Name                                                                                    Query                                \n\n            To see all available qualifiers, see our documentation.                                                                       Cancel              Create saved search                                                Sign in                                                         Sign up                                        Reseting focus                                                 You signed in with another tab or window. Reload to refresh your session.        You signed out in another tab or window. Reload to refresh your session.        You switched accounts on another tab or window. Reload to refresh your session.          Dismiss alert                                                                                                                              sigoden        /    **      llm-functions    **    Public                              \n               -                     Notifications    You must be signed in to change notification settings  \n  -                   Fork     72  \n  -                                   Star          486"
      metadata: {}
    - page_content: "## Files\n\n main/\n\n# README.md\n\nCopy path Blame  Blame        \n\n## Latest commit\n\n \n\n## History\n\nHistory215 lines (148 loc) · 6.31 KB main/\n\n# README.md\n\nTop\n\n## File metadata and controls\n\n- Preview\n- Code\n- Blame\n\n215 lines (148 loc) · 6.31 KBRaw\n\n# LLM Functions\n\nThis project empowers you to effortlessly build powerful LLM tools and agents using familiar languages like Bash, JavaScript, and Python.\n\nForget complex integrations, **harness the power of function calling** to connect your LLMs directly to custom code and unlock a world of possibilities. Execute system commands, process data, interact with APIs –  the only limit is your imagination.\n\n**Tools Showcase** \n\n**Agents showcase** \n\n## Prerequisites\n\nMake sure you have the following tools installed:\n- argc: A bash command-line framework and command runner\n- jq: A JSON processor"
      metadata: {}
    - page_content: "## Getting Started with AIChat\n\n**Currently, AIChat is the only CLI tool that supports `llm-functions`. We look forward to more tools supporting `llm-functions`.**\n\n### 1. Clone the repository\n\n```\ngit clone https://github.com/sigoden/llm-functions\ncd llm-functions\n```\n\n### 2. Build tools and agents\n\n#### I. Create a `./tools.txt` file with each tool filename on a new line.\n\n```\nget_current_weather.sh\nexecute_command.sh\n#execute_py_code.py\n\n```\nWhere is the web_search tool?\n\nThe `web_search` tool itself doesn't exist directly, Instead, you can choose from a variety of web search tools.\n\nTo use one as the `web_search` tool, follow these steps:\n- \n\n**Choose a Tool:** Available tools include:\n- `web_search_cohere.sh`\n- `web_search_perplexity.sh`\n- `web_search_tavily.sh`\n- `web_search_vertexai.sh`\n\n- \n\n**Link Your Choice:** Use the `argc` command to link your chosen tool as `web_search`. For example, to use `web_search_perplexity.sh`:\n\n```\n$ argc link-web-search web_search_perplexity.sh\n```\n\nThis command creates a symbolic link, making `web_search.sh` point to your selected `web_search_perplexity.sh` tool.\n\nNow there is a `web_search.sh` ready to be added to your `./tools.txt`.\n\n#### II. Create a `./agents.txt` file with each agent name on a new line.\n\n```\ncoder\ntodo\n\n```\n\n#### III. Build `bin` and `functions.json`\n\n```\nargc build\n```\n\n#### IV. Ensure that everything is ready (environment variables, Node/Python dependencies, mcp-bridge server)\n\n```\nargc check\n```"
      metadata: {}
    - page_content: |-
        ### 3. Link LLM-functions and AIChat

        AIChat expects LLM-functions to be placed in AIChat's **functions_dir** so that AIChat can use the tools and agents that LLM-functions provides.

        You can symlink this repository directory to AIChat's **functions_dir** with:

        ```
        ln -s "$(pwd)" "$(aichat --info | sed -n 's/^functions_dir\s\+//p')"
        # OR
        argc link-to-aichat
        ```

        Alternatively, you can tell AIChat where the LLM-functions directory is by using an environment variable:

        ```
        export AICHAT_FUNCTIONS_DIR="$(pwd)"
        ```

        ### 4. Start using the functions

        Done! Now you can use the tools and agents with AIChat.

        ```
        aichat --role %functions% what is the weather in Paris?
        aichat --agent todo list all my todos
        ```
      metadata: {}
    - page_content: |-
        ## Writing Your Own Tools

        Building tools for our platform is remarkably straightforward. You can leverage your existing programming knowledge, as tools are essentially just functions written in your preferred language.

        LLM Functions automatically generates the JSON declarations for the tools based on **comments**. Refer to `./tools/demo_tool.{sh,js,py}` for examples of how to use comments for autogeneration of declarations.

        ### Bash

        Create a new bashscript in the ./tools/ directory (.e.g. `execute_command.sh`).

        ```
        #!/usr/bin/env bash
        set -e

        # @describe Execute the shell command.
        # @option --command! The command to execute.

        main() {
            eval "$argc_command" >> "$LLM_OUTPUT"
        }

        eval "$(argc --argc-eval "$0" "$@")"
        ```

        ### Javascript

        Create a new javascript in the ./tools/ directory (.e.g. `execute_js_code.js`).

        ```
        /**
         * Execute the javascript code in node.js.
         * @typedef {Object} Args
         * @property {string} code - Javascript code to execute, such as `console.log("hello world")`
         * @param {Args} args
         */
        exports.run = function ({ code }) {
          eval(code);
        }
        ```

        ### Python

        Create a new python script in the ./tools/ directory (e.g. `execute_py_code.py`).

        ```
        def run(code: str):
            """Execute the python code.
            Args:
                code: Python code to execute, such as `print("hello world")`
            """
            exec(code)
        ```
      metadata: {}
    - page_content: "## Writing Your Own Agents\n\nAgent = Prompt + Tools (Function Calling) + Documents (RAG), which is equivalent to OpenAI's GPTs.\n\nThe agent has the following folder structure:\n\n```\n└── agents\n    └── myagent\n        ├── functions.json                  # JSON declarations for functions (Auto-generated)\n        ├── index.yaml                      # Agent definition\n        ├── tools.txt                       # Shared tools\n        └── tools.{sh,js,py}                # Agent tools \n\n```\n\nThe agent definition file ( `index.yaml`) defines crucial aspects of your agent:\n\n```\nname: TestAgent                             \ndescription: This is test agent\nversion: 0.1.0\ninstructions: You are a test ai agent to ... \nconversation_starters:\n  - What can you do?\nvariables:\n  - name: foo\n    description: This is a foo\ndocuments:\n  - local-file.txt\n  - local-dir/\n  - https://example.com/remote-file.txt\n```\n\nRefer to ./agents/demo for examples of how to implement a agent.\n\n## MCP (Model Context Protocol)\n\n- mcp/server: Let LLM-Functions tools/agents be used through the Model Context Protocol.\n- mcp/bridge: Let external MCP tools be used by LLM-Functions.\n\n## Documents\n\n- Tool Guide\n- Agent Guide\n- Argc Commands\n\n## License\n\nThe project is under the MIT License, Refer to the LICENSE file for detailed information."
      metadata: {}
    - page_content: |-
        ## Footer

                                                   © 2025 GitHub, Inc.                                                     You can’t perform that action at this time.
      metadata: {}
  1:
    hash: 1e8051b86670c58fb77495f7b022b444c124bd8ac7d0c73391150d62f83e9d59
    path: /Users/mike/personal_projects/dotfiles/aichat/functions/agents/demo/README.md
    documents:
    - page_content: |-
        # Demo

        This agent serves as a demo to guide agent development and showcase various agent capabilities.
      metadata: {}
vectors:
  0-0: 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
  0-1: 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
  0-2: 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
  0-3: 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
  0-4: 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
  0-5: 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
  0-6: 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
  0-7: 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
  1-0: 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
